document.addEventListener('DOMContentLoaded', function() {
    // –≠–ª–µ–º–µ–Ω—Ç—ã DOM
    const galleryContainer = document.getElementById('galleryContainer');
    const resultsList = document.getElementById('resultsList');
    const winnerCard = document.getElementById('winnerCard');
    const winnerImage = document.getElementById('winnerImage');
    const winnerTitle = document.getElementById('winnerTitle');
    const winnerVotes = document.getElementById('winnerVotes');
    const uploadArea = document.getElementById('uploadArea');
    const fileInput = document.getElementById('fileInput');
    const pumpkinName = document.getElementById('pumpkinName');
    const previewContainer = document.getElementById('previewContainer');
    const submitBtn = document.getElementById('submitBtn');
    const clearAllBtn = document.getElementById('clearAllBtn');
    const clearGalleryBtn = document.getElementById('clearGalleryBtn');
    const clearResultsBtn = document.getElementById('clearResultsBtn');
    const tabs = document.querySelectorAll('.tab');
    const tabContents = document.querySelectorAll('.tab-content');
    
    // –≠–ª–µ–º–µ–Ω—Ç—ã —Ç–∞–π–º–µ—Ä–∞
    const countdownElement = document.getElementById('countdown');
    const countdownFinishedElement = document.getElementById('countdownFinished');
    const hoursElement = document.getElementById('hours');
    const minutesElement = document.getElementById('minutes');
    const secondsElement = document.getElementById('seconds');
    
    // –î–∞–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    let pumpkins = JSON.parse(localStorage.getItem('pumpkins')) || [];
    let votes = JSON.parse(localStorage.getItem('votes')) || {};
    let currentUploadedImage = null;
    let countdownInterval = null;
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    initializeGallery();
    updateResults();
    startCountdown();
    updateClearButtons();
    
    // –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á–µ—Ç–∞
    function startCountdown() {
        function updateCountdown() {
            const now = new Date();
            const moscowTime = new Date(now.toLocaleString("en-US", {timeZone: "Europe/Moscow"}));
            
            const targetTime = new Date(moscowTime);
            targetTime.setHours(23, 0, 0, 0);
            
            if (moscowTime >= targetTime) {
                targetTime.setDate(targetTime.getDate() + 1);
            }
            
            const timeDiff = targetTime - moscowTime;
            
            if (timeDiff <= 0) {
                countdownElement.style.display = 'none';
                countdownFinishedElement.style.display = 'block';
                clearInterval(countdownInterval);
                disableVoting();
                return;
            }
            
            const hours = Math.floor(timeDiff / (1000 * 60 * 60));
            const minutes = Math.floor((timeDiff % (1000 * 60 * 60)) / (1000 * 60));
            const seconds = Math.floor((timeDiff % (1000 * 60)) / 1000);
            
            hoursElement.textContent = hours.toString().padStart(2, '0');
            minutesElement.textContent = minutes.toString().padStart(2, '0');
            secondsElement.textContent = seconds.toString().padStart(2, '0');
        }
        
        updateCountdown();
        countdownInterval = setInterval(updateCountdown, 1000);
    }
    
    // –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
    function disableVoting() {
        document.querySelectorAll('.vote-btn').forEach(btn => {
            btn.disabled = true;
            btn.textContent = '–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ';
        });
    }
    
    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
    tabs.forEach(tab => {
        tab.addEventListener('click', function() {
            const tabId = this.getAttribute('data-tab');
            
            tabs.forEach(t => t.classList.remove('active'));
            this.classList.add('active');
            
            tabContents.forEach(content => content.classList.remove('active'));
            document.getElementById(tabId).classList.add('active');
        });
    });
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    uploadArea.addEventListener('click', () => fileInput.click());
    
    uploadArea.addEventListener('dragover', (e) => {
        e.preventDefault();
        uploadArea.style.background = '#ffecc7';
    });
    
    uploadArea.addEventListener('dragleave', () => {
        uploadArea.style.background = '#fff9e6';
    });
    
    uploadArea.addEventListener('drop', (e) => {
        e.preventDefault();
        uploadArea.style.background = '#fff9e6';
        
        if (e.dataTransfer.files.length > 0) {
            handleFile(e.dataTransfer.files[0]);
        }
    });
    
    fileInput.addEventListener('change', function() {
        if (this.files.length > 0) {
            handleFile(this.files[0]);
        }
    });
    
    function handleFile(file) {
        if (!file.type.match('image.*')) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
            return;
        }
        
        const reader = new FileReader();
        
        reader.onload = function(e) {
            currentUploadedImage = {
                name: file.name,
                url: e.target.result
            };
            
            updatePreview();
        };
        
        reader.readAsDataURL(file);
    }
    
    function updatePreview() {
        previewContainer.innerHTML = '';
        
        if (currentUploadedImage) {
            const previewItem = document.createElement('div');
            previewItem.className = 'preview-item';
            
            const img = document.createElement('img');
            img.src = currentUploadedImage.url;
            img.alt = currentUploadedImage.name;
            
            const removeBtn = document.createElement('button');
            removeBtn.className = 'remove-preview';
            removeBtn.innerHTML = '√ó';
            removeBtn.addEventListener('click', (e) => {
                e.stopPropagation();
                currentUploadedImage = null;
                updatePreview();
            });
            
            previewItem.appendChild(img);
            previewItem.appendChild(removeBtn);
            previewContainer.appendChild(previewItem);
        }
    }
    
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç—ã–∫–≤—ã
    submitBtn.addEventListener('click', function() {
        if (!currentUploadedImage) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Ç—ã–∫–≤—ã');
            return;
        }
        
        if (!pumpkinName.value.trim()) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—ã–∫–≤—ã');
            return;
        }
        
        const newPumpkin = {
            id: Date.now().toString(),
            name: pumpkinName.value.trim(),
            image: currentUploadedImage.url,
            votes: 0
        };
        
        pumpkins.push(newPumpkin);
        savePumpkins();
        initializeGallery();
        
        // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã
        currentUploadedImage = null;
        pumpkinName.value = '';
        updatePreview();
        
        alert('–¢—ã–∫–≤–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!');
        
        // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –≥–∞–ª–µ—Ä–µ—é
        tabs.forEach(t => t.classList.remove('active'));
        tabContents.forEach(content => content.classList.remove('active'));
        document.querySelector('.tab[data-tab="gallery"]').classList.add('active');
        document.getElementById('gallery').classList.add('active');
        
        updateClearButtons();
    });
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–∞–ª–µ—Ä–µ–∏
    function initializeGallery() {
        galleryContainer.innerHTML = '';
        
        if (pumpkins.length === 0) {
            galleryContainer.innerHTML = `
                <div style="text-align: center; width: 100%; padding: 40px; color: #5a2d0c;">
                    <i class="fas fa-pumpkin" style="font-size: 3rem; margin-bottom: 20px;"></i>
                    <p style="font-size: 1.3rem;">–ü–æ–∫–∞ –Ω–µ—Ç —Ç—ã–∫–≤. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—É—é!</p>
                </div>
            `;
            return;
        }
        
        pumpkins.forEach(pumpkin => {
            const pumpkinCard = document.createElement('div');
            pumpkinCard.className = 'pumpkin-card';
            pumpkinCard.innerHTML = `
                <img src="${pumpkin.image}" alt="${pumpkin.name}" class="pumpkin-image">
                <div class="pumpkin-info">
                    <h3 class="pumpkin-name">${pumpkin.name}</h3>
                    <div class="vote-section">
                        <button class="vote-btn ${votes[pumpkin.id] ? 'voted' : ''}" data-id="${pumpkin.id}">
                            ${votes[pumpkin.id] ? 'üéÉ –ü—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–Ω–æ' : 'üéÉ –ì–æ–ª–æ—Å–æ–≤–∞—Ç—å'}
                        </button>
                        <div class="votes-count">${pumpkin.votes} –≥–æ–ª–æ—Å–æ–≤</div>
                    </div>
                </div>
            `;
            
            galleryContainer.appendChild(pumpkinCard);
        });
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
        document.querySelectorAll('.vote-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                const pumpkinId = this.getAttribute('data-id');
                voteForPumpkin(pumpkinId);
            });
        });
    }
    
    // –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ —Ç—ã–∫–≤—É
    function voteForPumpkin(pumpkinId) {
        if (votes[pumpkinId]) {
            alert('–í—ã —É–∂–µ –≥–æ–ª–æ—Å–æ–≤–∞–ª–∏ –∑–∞ —ç—Ç—É —Ç—ã–∫–≤—É!');
            return;
        }
        
        const pumpkinIndex = pumpkins.findIndex(p => p.id === pumpkinId);
        if (pumpkinIndex !== -1) {
            pumpkins[pumpkinIndex].votes += 1;
            votes[pumpkinId] = true;
            
            savePumpkins();
            saveVotes();
            
            initializeGallery();
            updateResults();
            
            alert('–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –≥–æ–ª–æ—Å!');
            updateClearButtons();
        }
    }
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    function updateResults() {
        resultsList.innerHTML = '';
        
        if (pumpkins.length === 0) {
            resultsList.innerHTML = `
                <div style="text-align: center; padding: 30px; color: #5a2d0c;">
                    <p>–ü–æ–∫–∞ –Ω–µ—Ç —Ç—ã–∫–≤ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è.</p>
                </div>
            `;
            winnerCard.style.display = 'none';
            return;
        }
        
        const sortedPumpkins = [...pumpkins].sort((a, b) => b.votes - a.votes);
        const winner = sortedPumpkins[0];
        
        if (winner.votes > 0) {
            winnerImage.src = winner.image;
            winnerTitle.textContent = winner.name;
            winnerVotes.textContent = `${winner.votes} –≥–æ–ª–æ—Å–æ–≤`;
            winnerCard.style.display = 'flex';
        } else {
            winnerCard.style.display = 'none';
        }
        
        sortedPumpkins.forEach((pumpkin, index) => {
            const resultItem = document.createElement('div');
            resultItem.className = 'result-item';
            resultItem.innerHTML = `
                <div class="result-rank">${index + 1}</div>
                <img src="${pumpkin.image}" alt="${pumpkin.name}" class="result-image">
                <div class="result-details">
                    <div class="result-name">${pumpkin.name}</div>
                    <div class="result-votes">${pumpkin.votes} –≥–æ–ª–æ—Å–æ–≤</div>
                </div>
            `;
            resultsList.appendChild(resultItem);
        });
    }
    
    // –§—É–Ω–∫—Ü–∏–∏ –æ—á–∏—Å—Ç–∫–∏
    function clearAllData() {
        if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –í–°–ï —Ç—ã–∫–≤—ã –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è?')) {
            pumpkins = [];
            votes = {};
            localStorage.removeItem('pumpkins');
            localStorage.removeItem('votes');
            
            initializeGallery();
            updateResults();
            updateClearButtons();
            
            alert('–í—Å–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω—ã!');
        }
    }
    
    function clearGallery() {
        if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ç—ã–∫–≤—ã?')) {
            pumpkins = [];
            localStorage.setItem('pumpkins', JSON.stringify(pumpkins));
            
            initializeGallery();
            updateResults();
            updateClearButtons();
            
            alert('–ì–∞–ª–µ—Ä–µ—è —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–∞!');
        }
    }
    
    function clearResults() {
        if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –≥–æ–ª–æ—Å–∞?')) {
            pumpkins.forEach(pumpkin => {
                pumpkin.votes = 0;
            });
            votes = {};
            
            localStorage.setItem('pumpkins', JSON.stringify(pumpkins));
            localStorage.setItem('votes', JSON.stringify(votes));
            
            initializeGallery();
            updateResults();
            updateClearButtons();
            
            alert('–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω—ã!');
        }
    }
    
    function updateClearButtons() {
        const hasPumpkins = pumpkins.length > 0;
        const hasVotes = Object.keys(votes).length > 0;
        
        clearGalleryBtn.style.display = hasPumpkins ? 'block' : 'none';
        clearResultsBtn.style.display = hasVotes ? 'block' : 'none';
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –æ—á–∏—Å—Ç–∫–∏
    clearAllBtn.addEventListener('click', clearAllData);
    clearGalleryBtn.addEventListener('click', clearGallery);
    clearResultsBtn.addEventListener('click', clearResults);
    
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    function savePumpkins() {
        localStorage.setItem('pumpkins', JSON.stringify(pumpkins));
    }
    
    function saveVotes() {
        localStorage.setItem('votes', JSON.stringify(votes));
    }
});